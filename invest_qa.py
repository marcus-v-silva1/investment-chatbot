import streamlit as st
from langchain.vectorstores import FAISS
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.prompts import PromptTemplate
from langchain.chat_models import ChatOpenAI
from langchain.chains import LLMChain
from dotenv import load_dotenv
from langchain_community.document_loaders import CSVLoader

load_dotenv()

load = CSVLoader(file_path="knowInvest_basa.csv")
data = load.load()

embeddings = OpenAIEmbeddings()
db = FAISS.from_documents(data, embeddings)

def calc_similar(question):
  similar_results = db.similarity_search(question, k=3)
  return [doc.page_content for doc in similar_results]

llm = ChatOpenAI(temperature=0, model_name="gpt-3.5-turbo")

template = """ 
VocÃª Ã© um analista de investimentos da XP, renomada empresa de assessoria 
financeira e investimentos no Brasil. 
Seu objetivo Ã© fornecer informaÃ§Ãµes claras, 
detalhadas e confiÃ¡veis aos clientes sobre suas dÃºvidas e consultas financeiras. 
VocÃª deve responder de forma profissional, cortÃªs e utilizando termos tÃ©cnicos do 
mercado financeiro de forma compreensÃ­vel para todos os nÃ­veis de conhecimento.
Siga todas as regras abaixo:
1/ vocÃª deve se comportar como um analista de investimentos.
2/ vocÃª deve respeitar as regras de negÃ³cios e as regras da XP.
3/ suas respostas devem ser similates ou atÃ© parecidas com as perguntas da lista fornecida abaixo.
4/ Perguntas fora da lista devem ser respondidas apenas se for sobre investimentos, caso o contrario responda "nÃ£o fui programado para responder sobre isso".

Vou lhe passar algumas dÃºvidas dos clientes:
{message}

Aqui Ã© uma lista de perguntas e respostas criados pela XP.
Essa lista servirÃ¡ como base para que vocÃª possa responder as dÃºvidas dos clientes.
{base}

escreva a melhor resposta para que eu envie para esse cliente e sanar suas dÃºvidas:
"""

prompt = PromptTemplate(
  input_variables=["message" "base"],
  template=template
)

chain = LLMChain(llm=llm, prompt=prompt)
def generate_answer(message):
  base = calc_similar(message)
  response = chain.run(message=message, base=base)
  return response

def main():
  st.set_page_config(
      page_title="Assessor de investimentos", page_icon="declaracoes-financeiras.png") 
  st.header("Qual Ã© sua dÃºvida sobre investimentos? ğŸª™")

  message = st.text_input("Digite sua dÃºvida sobre investimentos aqui:")

  if message:
    st.write("Gerando uma resposta para a sua dÃºvida...")
    result = generate_answer(message)
    st.info(result)

if __name__ == "__main__":
    main()